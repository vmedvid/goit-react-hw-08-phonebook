{"version":3,"file":"static/js/712.b99e4b31.chunk.js","mappings":"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","sources":["components/Footer/Footer.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactListItem.styled.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js"],"sourcesContent":["import React from 'react';\nimport { Container, Typography } from '@mui/material';\n\nexport default function Footer() {\n  return (\n    <Container\n      sx={{\n        // position: 'absolute',\n        // bottom: '0',\n        // margin: '0',\n        padding: '0',\n        width: '100%',\n        borderTop: 1,\n        borderColor: 'rgb(25, 118, 210)',\n        textAlign: 'center',\n      }}\n    >\n      <Typography\n        variant=\"body1\"\n        component=\"p\"\n        sx={{\n          color: 'rgb(25, 118, 210)',\n          paddingTop: '10px',\n          paddingBottom: '10px',\n        }}\n      >\n        © Created by GoIT student MV, 2023\n      </Typography>\n    </Container>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin: 10px 10px 20px;\n  padding: 10px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border: 1px solid #000;\n  border-radius: 8px;\n  background-color: #d6e8f6;\n`;\n\nexport const Label = styled.label`\n  margin-top: 5px;\n  margin-left: 5px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  padding-left: 5px;\n  width: 290px;\n  height: 35px;\n  border: 1px solid #ccc;\n  background-color: #fff;\n  border-radius: 8px;\n`;\n\nexport const Button = styled.button`\n  margin: 10px auto;\n  padding: 10px 15px;\n  height: 35px;\n  background-color: #5995ef;\n  color: #fff;\n  letter-spacing: 0.1em;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n","import { Form, Label, Input, Button } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-hot-toast';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    const form = evt.currentTarget;\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      toast.error(`${newContact.name} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <Label htmlFor=\"number\">Phone number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  margin-top: 10px;\n  min-width: 320px;\n`;\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 5px;\n  font-size: 20px;\n  border: 1px solid #d6e8f6;\n  border-radius: 5px;\n\n  :nth-of-type(odd) {\n    background-color: #d6e8f6;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ListItem } from './ContactListItem.styled';\n// import { ContactDeleteBtn } from './ContactDeleteBtn.styled';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Button } from '@mui/material';\n\nexport const ContactListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const contact = {\n    name,\n    id,\n  };\n  const handleDeleteBtn = () => {\n    dispatch(deleteContact(contact));\n  };\n\n  return (\n    <ListItem>\n      {name}: <br /> {number}\n      {/* <ContactDeleteBtn type=\"button\" onClick={handleDeleteBtn}>\n        Delete\n      </ContactDeleteBtn> */}\n      <Button\n        type=\"button\"\n        variant=\"outlined\"\n        aria-label=\"registration\"\n        sx={{\n          margin: '3px 5px',\n          padding: '2px 5px',\n          '&:hover': {\n            color: 'rgb(250, 250, 250)',\n            backgroundColor: '#b81515',\n            border: '1px solid #b81515',\n          },\n        }}\n        onClick={handleDeleteBtn}\n      >\n        <DeleteIcon />\n      </Button>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { List } from './ContactList.styled';\nimport { ContactListItem } from './ContactListItem';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  // console.log('contacts in ContactList', contacts);\n\n  const newList = () => {\n    const subString = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(subString)\n    );\n  };\n\n  return (\n    <List>\n      {newList().map(contact => (\n        <ContactListItem\n          key={contact.id}\n          name={contact.name}\n          number={contact.number}\n          id={contact.id}\n        />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 10px 0;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  padding: 5px;\n  width: 200px;\n  font-size: 17px;\n  border: 1px solid #ccc;\n  background-color: #fff;\n  border-radius: 8px;\n`;\n","import { Label, Input } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilter = evt => {\n    dispatch(changeFilter(evt.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <Label htmlFor=\"search\">\n      Find contact by name\n      <Input type=\"text\" name=\"search\" onChange={handleFilter} />\n    </Label>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Box, Typography } from '@mui/material';\nimport Footer from 'components/Footer/Footer';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.contacts.isLoading);\n\n  // console.log('isLoading in Contacts', isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Box\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          margin: '10px auto 40px',\n          padding: '20px 10px 40px',\n          maxWidth: 380,\n          '& .MuiTextField-root': { mb: 5, width: '100%' },\n          borderRadius: 2,\n          boxShadow: 3,\n        }}\n      >\n        <Typography\n          variant=\"h3\"\n          sx={{\n            mt: 1,\n            mb: 1,\n            fontSize: 30,\n            fontWeight: 700,\n            textAlign: 'center',\n          }}\n        >\n          Create contact\n        </Typography>\n\n        <ContactForm />\n\n        {isLoading && <p>Loading...</p>}\n        <Typography\n          variant=\"h3\"\n          sx={{\n            mt: 1,\n            fontSize: 30,\n            fontWeight: 700,\n            textAlign: 'center',\n          }}\n        >\n          Contacts\n        </Typography>\n        <Filter />\n        <ContactList />\n      </Box>\n      <Footer />\n    </>\n  );\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;"],"names":["Footer","sx","padding","width","borderTop","borderColor","textAlign","variant","component","color","paddingTop","paddingBottom","Form","styled","Label","Input","Button","ContactForm","dispatch","useDispatch","contacts","useSelector","state","items","onSubmit","evt","preventDefault","form","currentTarget","newContact","name","elements","value","number","find","contact","toast","addContact","reset","htmlFor","type","pattern","title","required","List","ListItem","ContactListItem","id","margin","backgroundColor","border","onClick","deleteContact","Delete","ContactList","filter","subString","toLowerCase","includes","newList","map","Filter","onChange","changeFilter","target","trim","Contacts","isLoading","useEffect","fetchContacts","Box","display","flexDirection","alignItems","maxWidth","mb","borderRadius","boxShadow","Typography","mt","fontSize","fontWeight","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","overridesResolver","props","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","typography","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","className","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx"],"sourceRoot":""}